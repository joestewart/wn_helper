<?php

/**
 * Implmentation of hook_init().
 */
function wn_helper_init() {
  // Load wn_helper's css and javascript.
  drupal_add_css((drupal_get_path('module', 'wn_helper')) . '/css/wn_helper.css');
  drupal_add_js((drupal_get_path('module', 'wn_helper')) . '/js/wn_helper.js');
}


/**
 * Implementation of hook_theme().
 */
function wn_helper_theme() {
  $items = array();

  //defining theme callback used to wrap THEME_follow_link.
  $items['wn_helper_follow_link'] = array(
    'arguments' => array('link' => NULL),
  );


  return $items;
}


/**
 * Implementation of hook_theme_registry_alter().
 */
function wn_helper_theme_registry_alter(&$theme_registry) {
  //change the follow link theme callback to the one we defined here
  $theme_registry['follow_link']['function'] = 'wn_helper_follow_link';
}

/**
 * Implementation of hook_help().
 *
 * Adds a help message our our custom dashboard.
 */
function wn_helper_help($path, $arg) {
  switch ($path) {
    case 'admin/dashboard':
      return 'Welcome to the Watershed Now! Dashboard. Here you will find quick links and other tools for managing your site. If you get stuck, consider reaching out to the maintainers of Watershed Now!, <a href="http://thinkshout.com/contact" target="_blank">ThinkShout.com</a>.';
  }
}

/**
 * Implementation of hook_menu().
 *
 * Adds a customized dashboard menu item and page.
 */
function wn_helper_menu() {
  $items = array();

  $items['admin/dashboard'] = array(
    'title' => 'Watershed Now! Dashboard',
    'page callback' => 'wn_helper_dashboard',
    'access arguments' => array('administer site configuration'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'wn_helper.admin.inc',
    'weight' => -20,
  );

  return $items;
}

/**
 * Implementation of hook_form_alter().
 *
 * Borrowing heavily from Development Seed.
 */
function wn_helper_form_alter(&$form, $form_state, $form_id) {
  switch ($form_id) {
    case 'system_site_information_settings':

      global $user; // Some of the display is dependent upon access.
    
      // Allow for custom page title on site front page
      $form['site_name']['#title'] = 'Website Name';
      $form['site_name']['#description'] = 'The name of this website - Generally recommended to be your organization\'s name.';
      
      // Add more applicable help text for Site Mission field.
      // Note for Watershed Now themes based upon "Watershed" parent theme, mission displays on all pages.
      $form['site_mission']['#description'] = 'This mission statement is presented under "About Us" in the footer of themes that come with the Watershed Now distribution.';

      if ($user->uid != '1') {
        // Hide silly anonymous field on site info form unless super user.
        $form['anonymous']['#access'] = FALSE;
        $form['site_frontpage']['#access'] = FALSE;
      }

      //add newsletter textarea to site information form
      $form['site_newsletter'] = array(
        '#type' => 'textarea',
        '#title' => 'Newsletter HTML',
        '#description' => 'Paste in newsletter form HTML embed code.',
        '#default_value' => variable_get('site_newsletter',''),
      );
      $form['buttons']['#weight'] = 10; //make sure buttons are at the bottom

      break;
      
    case 'system_themes_form':
    // Hide cruddy themes that we don't want folks to use, as well as admin themes that are fixed.
      $hidden_themes = array('bluemarine', 'chameleon', 'garland', 'minnelli', 'marvin', 'pushbutton');
      foreach ($hidden_themes as $theme) {
        unset($form[$theme]);
        unset($form['status']['#options'][$theme]);
        unset($form['theme_default']['#options'][$theme]);
      }
      break;
  }
}

/**
 * This callback is used to generate the link title for RSS icon.
 */
function wn_helper_follow_link_tooltip_rss($title, $variables) {
  if( empty($title) ) {
    return t('Subscribe');
  }
  return t('Subscribe to @title', array('@title' => $title));
}

/**
 * This function is used to filter out extra networks, not supported
 * by the themes in watershednow.
 *
 * Also defines the RSS network.
 */
function wn_helper_follow_networks_alter(&$networks) {
  $sites = &$networks[0]; //alias
  $sites['feed'] = array(
    'title' => t('RSS Feed'),
    'domain' => '',
    'regex callback' => 'follow_network_regex_external',
    'tooltip callback' => 'wn_helper_follow_link_tooltip_rss'
  );

  $whitelist = array(
    'facebook',
    'feed',
    'flickr',
    'linkedin',
    'myspace',
    'twitter',
  );
  foreach( $sites as $k => $site ) {
    if( !in_array($k, $whitelist) ) {
      unset($sites[$k]);
    }
  }
}

/**
 * call the theme for our follow link.
 * Using theme call so others can hook into it.
 * see wn_helper_theme_registry_alter
 */
function wn_helper_follow_link($link) {
  return theme('wn_helper_follow_link',$link);
}

/**
 * Theme function to print an individual link.
 *
 * @param $link
 *   A follow link object.
 * @param $title
 *   The translated title of the social network.
 *
 * @ingroup themable
 */
function theme_wn_helper_follow_link($variables) {
  $link = $variables['link'];
  $network = $variables['network'];
  $title = !empty($link->title) ? $link->title : $network['title'];

  // @see follow_link_tooltip().
  $tooltip_callback = (isset($network['tooltip callback']) && function_exists($network['tooltip callback'])) ? $network['tooltip callback'] : 'follow_link_tooltip';
  $tooltip = $tooltip_callback($title, $variables);

  $classes = array();
  $classes[] = 'follow-link';
  $classes[] = "follow-link-{$link->name}";
  $classes[] = $link->uid ? 'follow-link-user' : 'follow-link-site';

  $attributes = array(
    'class' => implode(' ', $classes),
    'rel' => 'me external',
    'target' => '_blank',
    'title' => $tooltip,
  );
  $link->options['attributes'] = $attributes;

  return l($title, $link->path, $link->options) . "\n";
}